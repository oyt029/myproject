

import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URI;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FSDataInputStream;
import org.apache.hadoop.fs.FSDataOutputStream;
import org.apache.hadoop.fs.FileStatus;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IOUtils;
import org.apache.hadoop.util.Progressable;
import org.junit.Test;

@SuppressWarnings("all")
public class hdfsfile {

	public static boolean stringToHdfs(String content, String filePath) {
		// log.info(filePath);
		boolean flag = true;
		InputStream in = null;
		try {
			in = new ByteArrayInputStream(content.getBytes("utf-8"));
			Configuration conf = new Configuration();
			FileSystem fs = FileSystem.get(URI.create(filePath), conf);
			FSDataOutputStream out = fs.create(new Path(filePath));
			IOUtils.copyBytes(in, out, 4096, true);

		} catch (IOException e) {
			// log.error(e);
			flag = false;
			return flag;
		} finally {
			if (in != null) {
				try {
					in.close();
				} catch (IOException e) {
					// log.error(e);
				}
			}
		}
		return flag;

	}

	/**
	 * 上传文件到HDFS上去
	 */
	@Test
	private static void uploadToHdfs() throws FileNotFoundException,
			IOException {

		// String localSrc = "C:\\Users\\Administrator\\Desktop\\SpringMvc.pdf";
		// String dst = "hdfs://192.168.1.107:8020/SpringMvc.pdf";

		String localSrc = "/home/admin/test/1.jpg";
		String dst = "hdfs://192.168.1.169/tmp/1.jpg";

		InputStream in = new BufferedInputStream(new FileInputStream(localSrc));
		Configuration conf = new Configuration();

		FileSystem fs = FileSystem.get(URI.create(dst), conf);
		FSDataOutputStream out = fs.create(new Path(dst));
		IOUtils.copyBytes(in, out, 4096, true);

		System.out.println("-------------------end------------------------");
	}

	/**
	 * 从HDFS上读取文件
	 */
	private static void readFromHdfs() throws FileNotFoundException,
			IOException {
		// String dst = "hdfs://192.168.1.107:8020/SpringMvc.pdf";
		String dst = "hdfs://192.168.1.96:8020/tmp/QQ-test.jpg";
		Configuration conf = new Configuration();
		FileSystem fs = FileSystem.get(URI.create(dst), conf);
		FSDataInputStream hdfsInStream = fs.open(new Path(dst));

		OutputStream out = new FileOutputStream("c:\\QQ-test.jpg");
		byte[] ioBuffer = new byte[1024];
		int readLen = hdfsInStream.read(ioBuffer);

		while (-1 != readLen) {
			out.write(ioBuffer, 0, readLen);
			readLen = hdfsInStream.read(ioBuffer);
		}
		System.out.println("-------------------end------------------------");
	}

	/**
	 * 以append方式将内容添加到HDFS上文件的末尾;
	 * 
	 * 注意：文件更新，需要在hdfs-site.xml中添加 <property> <name>dfs.support.append</name>
	 * <value>true</value> </property>
	 * */

	private static void appendToHdfs() throws FileNotFoundException,
			IOException {
		String dst = "hdfs://192.168.1.107:8020/test/14-10-17/16/zyj.1413535465934x123";
		Configuration conf = new Configuration();
		FileSystem fs = FileSystem.get(URI.create(dst), conf);
		FSDataOutputStream out = fs.append(new Path(dst));

		int readLen = "append by hdfs java api".getBytes().length;

		if (-1 != readLen) {
			out.write("append by hdfs java api".getBytes(), 0, readLen);
			// out.sync(); } out.close(); fs.close();
			System.out
					.println("-------------------end------------------------");
		}
	}

	// 从HDFS上删除文件

	private static void deleteFromHdfs() throws FileNotFoundException,
			IOException {
		String dst = "hdfs://192.168.1.107:8020/master/14-08-11/test.txt";
		Configuration conf = new Configuration();
		FileSystem fs = FileSystem.get(URI.create(dst), conf);
		fs.deleteOnExit(new Path(dst));
		fs.close();
		System.out.println("-------------------end------------------------");
	}

	// 遍历HDFS上的文件和目录

	private static void getDirectoryFromHdfs() throws FileNotFoundException,
			IOException {
		String dst = "hdfs://192.168.1.169:8020/tmp/";
		Configuration conf = new Configuration();
		FileSystem fs = FileSystem.get(URI.create(dst), conf);
		FileStatus fileList[] = fs.listStatus(new Path(dst));
		int size = fileList.length;
		for (int i = 0; i < size; i++) {
			System.out.println("name:" + fileList[i].getPath().getName()
					+ "       size:" + fileList[i].getLen());
		}
		fs.close();
		System.out.println("-------------------end------------------------");
	}

	public static void main(String[] args) throws Exception {
		///// uploadToHdfs();
		// deleteFromHdfs();
		 getDirectoryFromHdfs();
		// appendToHdfs();
		//readFromHdfs();
		// stringToHdfs("test", "hdfs://192.168.1.107:8020/testup_test");
	}
	/*
	 * 
	 * 
	 * 	String dst = "hdfs://192.168.1.107:8020/test/14-10-17/16/zyj.1413535465934x123";
		Configuration conf = new Configuration();
		FileSystem fs = FileSystem.get(URI.create(dst), conf);
		FSDataOutputStream out = fs.append(new Path(dst));

		int readLen = "append by hdfs java api".getBytes().length;

		if (-1 != readLen) {
			out.write("append by hdfs java api".getBytes(), 0, readLen);
			// out.sync(); } out.close(); fs.close();
			System.out
					.println("-------------------end------------------------");
		}
	 * */
	public void cat(String outFile) throws IOException {
		// TODO Auto-generated method stub
		String dst = "hdfs://192.168.1.169:8020/";
		Configuration conf = new Configuration();
		Path path = new Path(outFile);
		FileSystem fs = FileSystem.get(URI.create(dst), conf);
        FSDataInputStream fsdis = null;
        System.out.println("cat: " + outFile);
        try {  
            fsdis =fs.open(path);
            IOUtils.copyBytes(fsdis, System.out, 4096, false);  
          } finally {  
            IOUtils.closeStream(fsdis);
            fs.close();
          }
		
	}
}